<?xml version="1.0" encoding="UTF-8"?>
<!--
    License CC BY-NC-SA 3.0
  
   This work is licensed under the 
   "Namensnennung – Keine kommerzielle Nutzung – Weitergabe unter
    gleichen Bedingungen 3.0 Deutschland (CC BY-NC-SA 3.0)" 
   http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.de
   
   Read the English translation here:
   
   "Attribution-NonCommercial-ShareAlike 3.0 Unported (CC BY-NC-SA 3.0)" 
   http://creativecommons.org/licenses/by-nc-sa/3.0/
   
-->

<!--<?xml-model href="file:../5.1/dbref.rnc" type="application/relax-ng-compact-syntax"?>-->
<section xml:id="dbc.struct.pretty-print" remap="topic" userlevel="easy"
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2001/XInclude"
   xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Pretty-Printing DocBook Documents</title>
  <info>
    <definitions definitionfile="defs.xml"/>
    <keywordset>
      <keyword>pretty-print</keyword>
      <keyword>xmlformat</keyword>
    </keywordset>
  </info>
  
  <section role="problem">
    <title>Problem</title>
    <para>Your file, be it autogenerated or somehow
      <quote>mangled</quote> is poorly indented and you want to 
      get rid of this. </para>
  </section>
  <section role="solution">
    <title>Solution</title>
    <para>There are different solutions to this problem:</para>
    <itemizedlist>
      <listitem>
        <para>a <quote>pretty-print</quote> stylesheet</para>
      </listitem>
      <listitem>
        <para>the XML parser <command>xmllint</command></para>
      </listitem>
      <listitem>
        <para>the <command>xmlformat</command> command</para>
      </listitem>
    </itemizedlist>
    
    <section xml:id="sec.struct.pretty-print.xmllint">
      <title>XML Parser <command>xmllint</command></title>
      <para>The XML parser <command>xmllint</command> offers the
      <option>--format</option> option to turn on indentation for each element.</para>
      <screen><command>xmllint</command> --format <replaceable>XMLFILE</replaceable></screen>
    </section>
    <section xml:id="sec.struct.pretty-print.xslt">
      <title>The Pretty-Print Stylesheet</title>
      <para>The simplest stylesheet for indentation is shown in <xref 
        linkend="ex.pretty.xsl"/>.
      It relies on the <filename>copy.xsl</filename> stylesheet.</para>
      <example xml:id="ex.pretty.xsl">
        <title><filename>pretty.xsl</filename></title>
        <info>
          <output xmlns="urn:x-toms:docbook-ext">
            <filename>pretty/pretty.xsl</filename>
          </output>
        </info>
        <programlisting linenumbering="numbered" language="xml"><xi:include
          href="pretty/pretty.xsl" parse="text"/></programlisting>
      </example>
    </section>
    <section xml:id="sec.struct.pretty-print.xmlformat">
      <title>Command <command>xmlformat</command></title>
      <para>The <command>xmlformat</command> tool is a Perl script which
      is available from the Web site <link
        xlink:href="http://www.kitebird.com/software/xmlformat/"/>. 
      </para>
      <para>The tool distinguishes between block elements, inline
        elements, and verbatim elements (similar to DocBook).
        The difference between the types is the whitespace
        normalization.</para>
      <para>Block elements typically begin with a new line and
        children are indented. Spacing before and after can be
        controlled too. </para>
      <para>Inline elements occur in block elements. Normalization and 
      line-wrapping occurs in regard to the enclosing block element.</para>
      <para>Verbatim elements are not formatted at all. That means, the
        content of the input element is the same as the content of the
        output element, including whitespaces.
      </para>
    </section>
  </section>
  <section role="discussion">
    <title>Discussion</title>
    <para>The <command>xmllint</command> command with its
        <option>--format</option> option is the easiest candidate but lacks
      customization. This is useful if you do not have any other tools
      at hand and you prefer a quick and rough reformatting.</para>
    <para>The <filename>pretty.xsl</filename> stylesheet is a pure XSLT
      solution. As such, it works on every platform which supports an
      XSLT processor. It is adaptable to your needs, but mixed content
      (like in <tag>para</tag>) is problematic.</para>
    <para>The most adaptable method is <command>xmlformat</command>.</para>
  </section>
  <!--<section role="seealso">
    <title>See Also</title>
    <para></para>
  </section>-->
</section>
