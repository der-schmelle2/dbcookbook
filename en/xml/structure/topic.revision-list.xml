<?xml version="1.0" encoding="UTF-8"?>
<!--
    License CC BY-NC-SA 3.0
  
   This work is licensed under the 
   "Namensnennung – Keine kommerzielle Nutzung – Weitergabe unter
    gleichen Bedingungen 3.0 Deutschland (CC BY-NC-SA 3.0)" 
   http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.de
   
   Read the English translation here:
   
   "Attribution-NonCommercial-ShareAlike 3.0 Unported (CC BY-NC-SA 3.0)" 
   http://creativecommons.org/licenses/by-nc-sa/3.0/
   
-->

<!--<?xml-model href="file:../5.1/dbref.rnc" type="application/relax-ng-compact-syntax"?>-->
<section xml:id="dbc.structure.revision-list" remap="topic" userlevel="medium"
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2001/XInclude"
   xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Including Revision Information from Version Control Systems</title>
  <info>
    <definitions definitionfile="defs.xml"/>
  </info>
  
  <section role="problem">
    <title>Problem</title>
    <para>You want to include revision information into your DocBook
      document from your version control systems, like Bazaar, Subversion,
      Mercurial, Git, and others.</para>
  </section>
  <section role="solution">
    <title>Solution</title>
    <para>Usually, the solution for each version control system is to
      output its log into its specific XML output and transform it with
      XSLT into a <tag>revhistory</tag> element. </para>
    
    <section xml:id="sec.structure.revision-list.bazaar">
      <title>Bazaar</title>
      <para><application
        xlink:href="http://bazaar.canonical.com">Bazaar</application>
        does not come with a predefined XML output. If you need this
        functionality, you have to install the
        <package>xmloutput</package> plugin first. This brings the
        <option>--xml</option> option to the <command>log</command>
        subcommand. Proceed as follows:</para>
      <procedure>
        <title>Installing the Bazaar Plugin xmloutput</title>
        <step>
          <para>Download the tar archive from <link xlink:href="http://wiki.bazaar.canonical.com/XMLOutput"/>.</para>
        </step>
        <step>
          <para>Unpack the archive.</para>
        </step>
        <step>
          <para>Change to the extension directory (usually something
            like
            <filename>bzr-xmloutput-<replaceable>VERSION</replaceable></filename>)
            and run:</para>
          <screen><command>python</command> setup build_ext</screen>
        </step>
        <step>
          <para>Copy the result directory <filename class="directory"
              >build/lib/bzrlib/plugins/xmloutput/</filename> to your
            plugin directory. For Linux it is something like <filename
              class="directory">$HOME/.bazaar/plugins/</filename>, for
            Windows copy it to <filename class="directory"
                >$APPDATA/bazaar/<replaceable>VERSION</replaceable>/plugins</filename></para>
        </step>
        <step>
          <para>Check if the plugin is correctly detected:</para>
          <screen><command>bzr</command> plugins</screen>
          <para>You should see the following line:</para>
          <screen>xmloutput <replaceable>VERSION</replaceable>
    This plugin adds an option (--xml) to log and provides an xml version of 
    some built-in commands.</screen>
        </step>
      </procedure>
      <para>After you have successully installed the plugin, create the 
        log output in XML with the following command:</para>
      <screen><command>bzr</command> log --xml <replaceable
        >REPO</replaceable> > bzr-log.xml</screen>
      <para>To convert the previous log file into DocBook's
        <tag>revhistory</tag>, use the following stylesheet:</para>
      <example>
        <title>Stylesheet to Convert Bazaar's Log File</title>
        <programlisting>TBD</programlisting>
      </example>
    </section>
    <section xml:id="sec.structure.revision-list.git">
      <title>Git</title>
      <para><application xlink:href="http://git-scm.com"
          >Git</application> does not have any options to turn the log
        into XML. However, with the <option>--pretty</option> option you
        can collect the information and wrap it into any XML elements
        you wish. The following command uses this option and
          <command>sed</command> to insert the <tag class="starttag"
          >logs</tag> start tag in the first line and <tag
          class="endtag">logs</tag> end tag in the last line:</para>
      <screen><command>git</command> log --date=iso<!--
       --> --pretty=format:"&lt;logentry revision='%h'>%n<!--
        --> &lt;author email='%ae'>%an&lt;/author>%n<!--
        --> &lt;date>%ad&lt;/date>%n<!-- 
        --> &lt;msg xml:space='preserve'>%s&lt;/msg>%n<!-- 
        -->&lt;/logentry>" \
  | sed -e '1i&lt;logs>' -e '$a&lt;/logs>' > git-log.xml</screen>
      <para>As the element names can be freely chosen, we use the same
        names as in <xref linkend="ex.mercurial-logfile"/>. This allows
        us to use the stylesheet from <xref linkend="ex.hg2revhistory.xsl"/>. </para>
    </section>
    <section xml:id="sec.structure.revision-list.mercurial">
      <title>Mercurial</title>
      <para><application
        xlink:href="http://mercurial.selenic.com">Mercurial</application>
        has the <option>--style</option> option to output its log into
        XML:</para>
      <screen><command>hg</command> log --style xml > hg-log.xml</screen>
      <para>The XML file of the Mercurial log looks like this:</para>
      <example xml:id="ex.mercurial-logfile">
        <title>Mercurial Log File in XML</title>
        <programlisting linenumbering="numbered" language="xml">&lt;log>
  &lt;logentry revision="69"
    node="dfadd024594c4083362fe6919264362803dcd285">
    &lt;tag>tip&lt;/tag>
    &lt;author email="tux@example.de">Tux Penguin&lt;/author>
    &lt;date>2011-05-22T01:56:21+02:00&lt;/date>
    &lt;msg xml:space="preserve">Corrected xml:id attribute&lt;/msg>
    &lt;paths>
      &lt;path action="M">xml/structure/topic.extract-element.xml&lt;/path>
    &lt;/paths>
  &lt;/logentry>
  &lt;logentry revision="68"
    node="833287df8943d0bab5ec65ec8aafe5bc42002289">
    &lt;author email="wilber@example.de">Wilber Gimp&lt;/author>
    &lt;date>2011-05-22T01:56:03+02:00&lt;/date>
    &lt;msg xml:space="preserve">Changed chapter title&lt;/msg>
    &lt;paths>
      &lt;path action="M">xml/structure/topic.revision-list.xml&lt;/path>
    &lt;/paths>
  &lt;/logentry>
  &lt;!-- Many more entries ... -->
&lt;/log</programlisting>
      </example>
      <para>The following stylesheet converts the log file from <xref 
        linkend="ex.mercurial-logfile"/> into DocBook's
        <tag>revhistory</tag>:</para>
      <example xml:id="ex.hg2revhistory.xsl">
        <title>Stylesheet <filename>hg2revhistory.xsl</filename> to Convert
          Mercurial XML Log Files into  DocBook's <tag>revhistory</tag></title>
        <info>
          <output xmlns="urn:x-toms:docbook-ext">
            <filename>revision-list/hg2revhistory.xsl</filename>
          </output>
        </info>
        <programlisting linenumbering="numbered" language="xml"
          ><xi:include href="revision-list/hg2revhistory.xsl" parse="text"
          /></programlisting>
      </example>
    </section>
    <section xml:id="sec.structure.revision-list.svn">
      <title>Subversion</title>
      <para><application
        xlink:href="http://subversion.tigris.org">Subversion</application>
        is similar to Mercurial: It has an
        <option>--xml</option> option to turn the log output into XML:</para>
      <screen><command>svn</command> log --xml > svn-log.xml</screen>
      <para>With the <option>-v</option> option (verbose) you get
        additional path information. As the output is very similar to
        Mercurial, you can apply the stylesheet shown in <xref linkend="ex.hg2revhistory.xsl"/>
        also for Subversion's log file.
      </para>
      <para>As an alternative, the DocBook Subversion repository (see
          <link
          xlink:href="https://docbook.svn.sourceforge.net/svnroot/docbook/trunk"
        />) contains the XSLT stylesheet
          <filename>releasetools/svnlog2docbook.xsl</filename> with
        additional features.</para>
    </section>    
  </section>
  <section role="discussion">
    <title>Discussion</title>
    <para><remark>TBD</remark></para>
  </section>
  <!--<section role="seealso">
    <title>See Also</title>
    <para></para>
  </section>-->
</section>
