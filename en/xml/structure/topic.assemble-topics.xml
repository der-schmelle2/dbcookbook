<?xml version="1.0" encoding="UTF-8"?>
<!--
    License CC BY-NC-SA 3.0
  
   This work is licensed under the 
   "Namensnennung – Keine kommerzielle Nutzung – Weitergabe unter
    gleichen Bedingungen 3.0 Deutschland (CC BY-NC-SA 3.0)" 
   http://creativecommons.org/licenses/by-nc-sa/3.0/de/deed.de
   
   Read the English translation here:
   
   "Attribution-NonCommercial-ShareAlike 3.0 Unported (CC BY-NC-SA 3.0)" 
   http://creativecommons.org/licenses/by-nc-sa/3.0/
   
-->
<!--<?xml-model href="file:../5.1/dbref.rnc" type="application/relax-ng-compact-syntax"?>-->

<section xml:id="dbc.structure.assemble-topics" remap="topic"
   userlevel="medium"
   xmlns="http://docbook.org/ns/docbook"
   xmlns:xi="http://www.w3.org/2001/XInclude"
   xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Assembling Topics</title>
  <info>
    <definitions definitionfile="defs.xml"/>
    <keywordset>
      <keyword>assemble</keyword>
      <keyword>assemblies</keyword>
      <keyword>topic</keyword>
    </keywordset>
  </info>
  
  <section role="problem">
    <title>Problem</title>
    <para>You want to convert an <tag>assembly</tag> structure and its associated
      modular files into a single DocBook&#xa0;5 file.</para>
  </section>
  <section role="solution">
    <title>Solution</title>
    <para>You need the following prerequisites:</para>
    <orderedlist>
      <listitem>
        <para>An <emphasis>assembly file</emphasis>. This starts with
          the <tag xlink:href="http://www.docbook.org/tdg51/en/html/assembly.html">assembly</tag> root element from DocBook&#xa0;5.1.
          The assembly file contains references to all of your modules
          which composes your realized DocBook document. Or in other
          words: the assembly file maps the modules to structure.
        </para>
      </listitem>
      <listitem>
        <para>The <filename>assembly/assemble.xsl</filename> stylesheet
          from the DocBook XSL distribution. Get the latest version as
          it is added in 2012.</para>
      </listitem>
      <listitem>
        <para>Your module files based on DocBook&#xa0;5.</para>
      </listitem>
    </orderedlist>
    <para>Use <command>xsltproc</command> to create a single
      DocBook&#xa0;5 (the variable <envar>DB</envar> contains the path
      of your DocBook XSL directory):</para>
    <screen><command>xsltproc</command> \
    $DB/assembly/assemble.xsl \
    assembly.xml</screen>
  </section>
  <section role="discussion">
    <title>Discussion</title>
    <para>The <filename>assemble.xsl</filename> stylesheet contains
      several parameters to influence the assembling process:</para>
    <table xml:id="tab.structure.assemble-topics.params">
      <title>Parameters to Influence the Assembling Process</title>
      <tgroup cols="2">
        <thead>
          <row>
            <entry>Parameter</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry><parameter>root.default.renderas</parameter></entry>
            <entry>Sets the name of the root element of the assembled
              document, if not specified with <tag class="attribute"
                >renderas</tag> attribute</entry>
          </row>
          <row>
            <entry><parameter>structure.id</parameter></entry>
            <entry>Selects one <tag>structure</tag> element from
              several; similar to the <parameter>rootid</parameter>
              parameter for the XHTML stylesheets</entry>
          </row>
          <row>
            <entry><parameter>topic.default.renderas</parameter></entry>
            <entry>Sets the name of the output element of any topic
              elements if not specified with <tag class="attribute">renderas</tag> attribute</entry>
          </row>
          <row>
            <entry><parameter>output.format</parameter></entry>
            <entry>Selects which of the possible output formats are
              being generated. The value of this parameter should match
              on a <tag class="attribute">format</tag> attribute on
              <tag>output</tag> elements.</entry>
          </row>
          <row>
            <entry><parameter>output.type</parameter></entry>
            <entry>Selects which structure element to process; the value
            should match with the <tag class="attribute">type</tag>
              attribute on a <tag>structure</tag> element</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <para>The following subsections shows some specific examples to
      influence the assembling process.</para>
    <section xml:id="sec.structure.assemble-topics.structure.id">
      <title>Selecting a Structure by ID</title>
      <para>For example, your assembly file looks like this:</para>
      <screen>&lt;assembly version="5.1" xmlns="http://docbook.org/ns/docbook">
  &lt;resources> ... &lt;/resources>
  &lt;structure xml:id="quickstart"> ... &lt;/structure>
  &lt;structure xml:id="reference"> ... &lt;/structure>
&lt;/assembly></screen>
      <para>As you can see, you have two <tag>structure</tag> elements,
        one for a quick start, another for a reference. To process only
        the reference, set the parameter
          <parameter>structure.id</parameter> to the <tag
          class="attribute">xml:id</tag> of the reference as
        follows:</para>
      <screen><command>xsltproc</command> \
    --stringparam structure.id reference \
    $DB/assembly/assemble.xsl \
    assembly.xml</screen>
      <para>If you omit the <parameter>structure.id</parameter>
        parameter, the <filename>assemble.xsl</filename> stlyesheet
        selects always the first <tag>structure</tag> element.</para>
    </section>
    <section xml:id="sec.structure.assemble-topics.structure.">
      <title>Selecting a Structure by Type</title>
      <para>For example, your assembly file looks like this:</para>
      <screen>&lt;assembly version="5.1" xmlns="http://docbook.org/ns/docbook">
  &lt;resources> ... &lt;/resources>
  &lt;structure type="help.system"> ... &lt;/structure>
  &lt;structure type="startup"> ... &lt;/structure>
&lt;/assembly></screen>
      <para>As you can see, there are two <tag>structure</tag> elements,
        one for a help system, another for a startup. To process only
        the startup, set the parameter
          <parameter>output.type</parameter> as follows:</para>
      <screen><command>xsltproc</command> \
    --stringparam output.type startup \
    $DB/assembly/assemble.xsl \
    assembly.xml</screen>
    </section>
  </section>
  <section role="seealso">
    <title>See Also</title>
    <itemizedlist>
      <listitem>
        <para><xref linkend="dbc.structure.splitting-into-topics"/></para>
      </listitem>
      <listitem>
        <para><link
          xlink:href="http://www.docbook.org/tdg51/en/html/assembly.html"/></para>
      </listitem>      
    </itemizedlist>
  </section>
</section>
