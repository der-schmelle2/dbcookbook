#!/bin/sh
#
# saxon9 script
# JPackage Project <http://www.jpackage.org/>

. /usr/share/java-utils/java-functions
[ -e bin/common.sh ] && . bin/common.sh

MAIN_CLASS=net.sf.saxon.Transform

#BASE_JARS="saxon9.jar saxon9-dom.jar saxon9-sql.jar saxon9-s9api.jar saxon9-jdom.jar saxon9-xpath.jar saxon9-xom.jar saxon9-xqj.jar xml-commons-apis.jar jaxp_parser_impl.jar bea-stax-api.jar bea-stax-ri.jar"
BASE_JARS="ant-contrib-1.0b3.jar calabash.jar commons-codec-1.3.jar 
commons-httpclient-3.1.jar commons-logging-1.1.1.jar isorelax.jar 
jing.jar jython.jar saxon.jar saxon9-ant.jar saxon9he.jar xercesImpl.jar xml-apis.jar xmlresolver.jar"

# Optional jars
#CLASSPATH="$CLASSPATH:"$(build-classpath docbook-xsl-saxon avalon-logkit xml-commons-resolver 2>/dev/null) || :
# Extend the CLASSPATH variable
CLASSPATH="$(build-classpath-directory ${FRAMEWORKSDIR}/db-xslt2/tools/lib/ 2>/dev/null)"
CLASSPATH="$CLASSPATH:${FRAMEWORKSDIR}/db-xslt2/ext/build/lib/docbook-xsl2-saxon.jar"

# If we have resolver, add the CatalogManager.properties dir to CLASSPATH,
# and tweak command line options so that it's used.
args=
#if echo "$CLASSPATH" | grep xml-commons-resolver >/dev/null 2>&1 ; then
#  CLASSPATH="$CLASSPATH:__RESOLVERDIR__"
#  # Tune options to use resolver.
#  r=org.apache.xml.resolver.tools.ResolvingXMLReader
#  for opt in -x -y ; do
#    if ! echo $@ | grep "\\$opt " >/dev/null 2>&1 ; then
#      args="$args $opt $r"
#    fi
#  done
#  r=org.apache.xml.resolver.tools.CatalogResolver
#  if ! echo $@ | grep "\\-r " >/dev/null 2>&1 ; then
#    args="$args -r:$r"
#  fi
#fi

BASE_FLAGS="-Dpython.path=/usr/lib/python2.6/site-packages:/usr/lib64/python2.6/"
BASE_FLAGS="$BASE_FLAGS -Dpython.cachedir=/tmp/jython/"

# Set parameters
set_jvm
# set_classpath $BASE_JARS
set_flags $BASE_FLAGS
set_options $BASE_OPTIONS

# Let's start
run $args "$@"
