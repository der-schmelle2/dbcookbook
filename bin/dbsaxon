#!/bin/bash
# 

source bin/common.sh

SAXON_JAR="${FRAMEWORKSDIR}/db-xslt/extensions/saxon65.jar"
XSLTHL_JAR="${FRAMEWORKSDIR}/db-xslt/extensions/xslthl-2.0.2.jar"

export ADDITIONAL_JARS="xerces-j2.jar xerces-j2-xml-apis.jar"
export ADDITIONAL_FLAGS="-Djavax.xml.parsers.DocumentBuilderFactory=\
org.apache.xerces.jaxp.DocumentBuilderFactoryImpl \
    -Djavax.xml.parsers.SAXParserFactory=\
org.apache.xerces.jaxp.SAXParserFactoryImpl \
${XINCLUDEFLAG} ${HLFLAG}"


export CLASSPATH="${CATALOGPROP}:${SAXON_JAR}"

[[ $VERBOSE != "" ]] && echo "Transforming..."
saxon -o ${BUILDDIR}/tmp.txt ${XMLIN} ${BASEXSLT1}/xhtml/chunk.xsl || exit_on_error "ERROR: Something went wrong"

# [ -e ${BUILDDIR}/html/css ] || ln -s ${BASEXSLT}/css/ ${BUILDDIR}/html/

# createEntity

if true; then 
  echo -e "\nCleaning up HTML...\n"

for i in ${BUILDDIR}/tmp/*.html; do
 _base=${i##*/}
 
# sed -i 's#<!DOCTYPE html>#<!DOCTYPE html \[<!ENTITY % ents SYSTEM \"ents.ent\"> %ents; \]>#' $i

# tidy -modify -asxhtml --output-xml yes --add-xml-decl no \
#   --numeric-entities yes --doctype omit \
#   --tidy-mark no \
#   --new-blocklevel-tags article,header,footer,section,aside \
#   --new-inline-tags video,audio,canvas,ruby,rt,rp $i 2>/dev/null

# We don't allow to contact the Internet, no validation is needed, so
# we use --nonet and --novalid
 echo "  Cleaning up ${_base}..."
 xsltproc --nonet --novalid -o ${HTMLOUT}/${_base} \
   ${BASEXSLT1}/misc/html2cleanhtml.xsl \
   $i
 sed -i '1s#??>#?>#' ${HTMLOUT}/${_base}
done
fi

echo -e "\nFind the HTMLs in ${BUILDDIR}/html/"
